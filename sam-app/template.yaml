AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app
  
  SAM Template for sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
  Api:
    OpenApiVersion: 3.0.3    
    
Parameters:
  UsersTableName:
    Type: String
    Default: users
  TracingValue:
    Type: String
    Default: Active
  Stage:
    Type: String
    Default: Prod

Resources:
  #Lambda
  PostUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: post-user-function
      CodeUri: ap/cmd/users/
      Handler: users
      Runtime: go1.x      
      Policies: AmazonDynamoDBFullAccess
      Tracing: !Ref TracingValue
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /users
            Method: POST
            RestApiId: !Ref UserApi
      Environment: 
        Variables:
          REGION: !Sub ${AWS::Region}
          USERS_TABLE_NAME: !Ref UsersTableName
      #Deployment Configurtion           
      AutoPublishAlias: live            
      DeploymentPreference:
        #Type: Linear10PercentEvery1Minute
        Type: AllAtOnce
  GetUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-user-function
      CodeUri: ap/cmd/users/
      Handler: users
      Runtime: go1.x
      Policies: 
      - AmazonDynamoDBReadOnlyAccess      
      Tracing: !Ref TracingValue      
      Events:
        GetEvent:
          Type: Api
          Properties:            
            Path: /users/{user_id}
            Method: Get
            RestApiId: !Ref UserApi            
      Environment: 
        Variables:
          REGION: !Sub ${AWS::Region}
          USERS_TABLE_NAME: !Ref UsersTableName        
      #Deployment Configurtion           
      AutoPublishAlias: live
      DeploymentPreference:
        #Type: Linear10PercentEvery1Minute
        Type: AllAtOnce
  #API Gateway
  UserApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Sub ${Stage}
      EndpointConfiguration:
        Type: REGIONAL
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./openapi.yaml
#https://dev.classmethod.jp/articles/sam-try-and-error/
  LambdaPermissionPostUsersFunction:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref PostUsersFunction
      Principal: apigateway.amazonaws.com
  LambdaPermissionGetUsersFunction:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetUsersFunction
      Principal: apigateway.amazonaws.com
#DynamoDB
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref UsersTableName
      KeySchema:
        - AttributeName: user_id
          KeyType:  HASH
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1          

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  UsersAPI:
    Description: "API Gateway endpoint URL for Prod environment"
    Value: !Sub "https://${UserApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/users/"
  GetUsersFunction:
    Description: "Get Users Lambda Function ARN"
    Value: !GetAtt GetUsersFunction.Arn
  GetUsersFunctionIamRole:
    Description: "Implicit IAM Role created for Get Users function ARN"
    Value: !GetAtt GetUsersFunctionRole.Arn
  GetUsersFunctionDeploymentGroup :
    Description: "Get Users Lambda Function DeploymentGroup ARN"
    Value: !Ref GetUsersFunctionDeploymentGroup
  PostUsersFunction:
    Description: "Post Users Lambda Function ARN"
    Value: !GetAtt PostUsersFunction.Arn
  PostUsersFunctionIamRole:
    Description: "Implicit IAM Role created for Post Users function ARN"
    Value: !GetAtt PostUsersFunctionRole.Arn
  PostUsersFunctionDeploymentGroup :
    Description: "Post Users Lambda Function DeploymentGroup ARN"
    Value: !Ref PostUsersFunctionDeploymentGroup

